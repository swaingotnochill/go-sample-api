// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// HelloUsecase is an autogenerated mock type for the HelloUsecase type
type HelloUsecase struct {
	mock.Mock
}

// PrintHello provides a mock function with given fields: c
func (_m *HelloUsecase) PrintHello(c context.Context) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewHelloUsecase creates a new instance of HelloUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHelloUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *HelloUsecase {
	mock := &HelloUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
